{"version":3,"sources":["logo.svg","components/Header.js","components/Todo.js","components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","onAdd","useState","text","setText","className","placeholder","value","onChange","e","target","onClick","defaultProps","propType","PropTypes","string","isRequired","func","Todo","todo","type","checked","isDone","currentTarget","Todos","todos","map","style","backgroundColor","id","App","setTodos","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAAe,I,4BCGTA,EAAS,SAAC,GAAmB,EAAlBC,MAAmB,IAAZC,EAAW,EAAXA,MAAW,EAIPC,mBAAS,IAJF,mBAIxBC,EAJwB,KAIlBC,EAJkB,KAM/B,OACI,yBAAQC,UAAU,SAAlB,UACI,uBAAOL,MAAM,KAAKM,YAAa,yBAAWC,MAAOJ,EAAMK,SAAU,SAACC,GAAD,OAAOL,EAAQK,EAAEC,OAAOH,UACzF,wBAAQI,QAAS,WACbV,EAAME,GACNC,EAAQ,KACTC,UAAW,MAHd,qBASZN,EAAOa,aAAe,CAClBZ,MAAO,kBAGXD,EAAOc,SAAW,CACdb,MAAOc,IAAUC,OAAOC,WACxBf,MAAOa,IAAUG,MAMNlB,QCjBAmB,EAhBF,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACX,OACI,sBAAKd,UAAW,OAAhB,UAEI,uBAAOe,KAAM,WAAYC,QAASF,EAAKG,OAAQjB,UAAW,WAAaG,SAAU,SAACC,GAC9EU,EAAKG,OAASb,EAAEc,cAAcF,WAIlC,sBAAKhB,UAAW,sBAAhB,UACI,mBAAGA,UAAW,QAAd,SAAwBc,EAAKnB,QAC7B,mBAAGK,UAAW,cAAd,iCCCDmB,EAVD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACZ,OACI,mCACKA,EAAMC,KAAI,SAACP,GAAD,OACP,cAAC,EAAD,CAAMA,KAAMA,EAAoBQ,MAAO,CAACC,gBAAiB,OAAzD,SAAkET,EAAKnB,OAAhDmB,EAAKU,UC2C7BC,MA1Cf,WAAgB,IAAD,EACe5B,mBAAS,CAC/B,CACI2B,GAAI,EACJ7B,MAAO,MACPsB,QAAQ,GAEZ,CACIO,GAAI,EACJ7B,MAAO,MACPsB,QAAQ,GAEZ,CACIO,GAAI,EACJ7B,MAAO,QACPsB,QAAQ,KAfL,mBACJG,EADI,KACGM,EADH,KA2BX,OACI,qCACI,cAAC,EAAD,CAAQ/B,MAAO,yBAAWC,MAVb,SAACE,GAClB4B,EAAS,GAAD,mBAAKN,GAAL,CAAY,CAChBI,GAAI,EACJ7B,MAAOG,EACPmB,QAAQ,SAOR,oBAAIjB,UAAW,cAAf,gCACA,qBAAKA,UAAW,WAAhB,SACI,cAAC,EAAD,CAAOoB,MAAOA,EAAMO,QAAO,SAACb,GAAD,OAAYA,EAAKG,cAEhD,oBAAIjB,UAAW,cAAf,0BACA,qBAAKA,UAAW,WAAhB,SACI,cAAC,EAAD,CAAOoB,MAAOA,EAAMO,QAAO,SAACb,GAAD,OAAWA,EAAKG,kBC/B5CW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.59b29bab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import PropTypes from \"prop-types\"\nimport {useState} from \"react\";\n\nconst Header = ({title, onAdd}) => {\n    // const onClick = (e) => {\n    //     console.log(e)\n    // }\n    const [text, setText] = useState(\"\")\n\n    return (\n        <header className=\"header\">\n            <input title=\"aa\" placeholder={\"Todoを入力\"} value={text} onChange={(e) => setText(e.target.value)}/>\n            <button onClick={() => {\n                onAdd(text)\n                setText(\"\")\n            }} className={\"btn\"}>Add\n            </button>\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: \"Defaults Title\",\n}\n\nHeader.propType = {\n    title: PropTypes.string.isRequired,\n    onAdd: PropTypes.func,\n}\n\n// CSS in JS\n// const headingStyle = {}\n\nexport default Header","const Todo = ({todo}) => {\n    return (\n        <div className={\"todo\"}>\n            {/*checked={todo.isDone}*/}\n            <input type={\"checkbox\"} checked={todo.isDone} className={\"checkbox\"}  onChange={(e) => {\n                todo.isDone = e.currentTarget.checked\n            }\n            } />\n\n            <div className={\"title-w-description\"}>\n                <p className={\"title\"}>{todo.title}</p>\n                <p className={\"description\"}>詳細</p>\n            </div>\n        </div>\n    )\n}\nexport default Todo","import Todo from \"./Todo\"\n\nconst Todos = ({todos}) => {\n    return (\n        <>\n            {todos.map((todo) => (\n                <Todo todo={todo} key={todo.id} style={{backgroundColor: \"red\"}}>{todo.title}</Todo>\n            ))}\n        </>\n    )\n}\n\nexport default Todos","import logo from './logo.svg';\nimport './App.css';\n\nimport Header from \"./components/Header\"\nimport Todos from \"./components/Todos\"\nimport {useState} from \"react\";\n\nfunction App() {\n    const [todos, setTodos] = useState([\n        {\n            id: 1,\n            title: \"one\",\n            isDone: false\n        },\n        {\n            id: 2,\n            title: \"two\",\n            isDone: false\n        },\n        {\n            id: 3,\n            title: \"three\",\n            isDone: true\n        }\n    ])\n\n    const onAddClicked = (text) => {\n        setTodos([...todos, {\n            id: 4,\n            title: text,\n            isDone: false\n        }])\n    }\n\n    return (\n        <>\n            <Header title={\"Todoを入力\"} onAdd={onAddClicked}/>\n            <h3 className={\"is-finished\"}>未完了</h3>\n            <div className={\"todo-box\"}>\n                <Todos todos={todos.filter((todo) => (!todo.isDone))}/>\n            </div>\n            <h3 className={\"is-finished\"}>完了</h3>\n            <div className={\"todo-box\"}>\n                <Todos todos={todos.filter((todo) => (todo.isDone))}/>\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}